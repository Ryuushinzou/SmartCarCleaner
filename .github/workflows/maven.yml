name: Build Spring app with Maven
env: 
  working_directory: ./backend

on:
  push:
    branches: [ master ]
    paths:
      - "backend/**"
  pull_request:
    branches: 
        - master
        - 'backend/**'
    paths:
      - "backend/**"

jobs:
  compile:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 8, 11 ]
    name: Java ${{ matrix.java }} compile
    env:
      working_directory: ./backend
      secrets_dir: ${{ secrets.SECRETS_DIR }}
    steps:
      - uses: actions/checkout@master
      - name: Setup java
        uses: actions/setup-java@v1
        env:
          FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
          FIREBASE_PRIVATE_KEY: ${{ env.secrets_dir}}/backend/firebase.json
        with:
          java-version: ${{ matrix.java }}
      - name: Test pathing
        env:
          FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
          FIREBASE_PRIVATE_KEY: ${{ env.secrets_dir }}/backend/firebase.json
        run: |
          echo Paths located url = ${{ env.FIREBASE_DATABASE_URL }} key = ${{ env.FIREBASE_PRIVATE_KEY }}
        working-directory: ${{env.working_directory}}
      - name: Compile project
        env:
          FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
          FIREBASE_PRIVATE_KEY: ${{ env.secrets_dir }}/backend/firebase.json
        run: mvn clean compile
        working-directory: ${{env.working_directory}}

  build:
    runs-on: ubuntu-latest
    needs: compile
    name: Build Maven project
    env:
      working_directory: ./backend
      secrets_dir: ${{ secrets.SECRETS_DIR }}
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Export variables
      shell: bash
      run: |
          scr_dir=$secrets_dir
          url=$frb_db_url
          if [ -z "$scr_dir"]
          then 
            echo "Scr_Dir is empty; set default"
            scr_dir=${PWD}/.github/secrets
          else
            echo "scr_dir=$scr_dir"
          fi
          if [ -z "$url" ]
          then
            echo "Url is empty; set default"
            url="https://some-project-85e15.firebaseio.com"
          else
            echo "url=$url"
          fi
          echo "::set-env name=FIREBASE_PRIVATE_KEY::${scr_dir}/backend/firebase.json"
          echo "::set-env name=FIREBASE_DATABASE_URL::${url}"
          echo "url=$FIREBASE_DATABASE_URL"
          echo "p_key=$FIREBASE_PRIVATE_KEY"
      env:
        secrets_dir: ${{ secrets.SECRETS_DIR }}
        frb_db_url: ${{ secrets.FIREBASE_DATABASE_URL }}
    - name: Build Spring project
      run: |
        echo "Vars: ${FIREBASE_DATABASE_URL} || ${FIREBASE_PRIVATE_KEY}"
        mvn clean verify
      working-directory: ${{ env.working_directory }}
    - name: Run tests
      run: mvn test
      working-directory: ${{ env.working_directory }}
    - name: Upload Maven build artifact
      uses: actions/upload-artifact@v1
      with:
       name: artifact
       path: ${{env.working_directory}}/target/app-0.0.1-SNAPSHOT.jar
